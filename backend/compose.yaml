services:
  dev_backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: base_backend
    ports:
       - "8080:8080"
    volumes:
      - ./:/app
      - /app/.venv
    networks:
      - default
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GOOGLE_APPLICATION_CREDENTIALS=${GOOGLE_APPLICATION_CREDENTIALS}
      - TAVILY_API_KEY=${TAVILY_API_KEY}
      - LOGFIRE_TOKEN=${LOGFIRE_TOKEN}
    # tty: true
    # stdin_open: true
    command: ["uv","run","fastapi","run", "api.py", "--host", "0.0.0.0", "--port", "8080","--reload"]


  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: backend
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GOOGLE_APPLICATION_CREDENTIALS=${GOOGLE_APPLICATION_CREDENTIALS}
    networks:
      - default
    develop:
      # Create a `watch` configuration to update the app
      watch:
        # Sync the working directory with the `/app` directory in the container
        - action: sync
          path:  ./
          target: /app
          # Exclude the project virtual environment
          ignore:
            - .venv/

        # Rebuild the image on changes to the `pyproject.toml`
        - action: rebuild
          path: ./pyproject.toml
    # stdin_open: true
    # tty: true
    # command:  ["/app/.venv/bin/fastapi","run", "main.py", "--host", "0.0.0.0", "--port", "8080","--reload"]



networks:
  default:
    name: devnet
    external: true